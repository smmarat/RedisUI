/*
 * Simple Redis UI client v0.1 beta
 * created by Marat Shmush <smmarat@gmail.com>
 * Reproduction of the source codes or their parts without the consent of the author not allowed
 */

/*
 * MainJFrame.java
 *
 * Created on 19.05.2011, 16:27:39
 */
package redisui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import redisui.connector.RedisFactory;
import redisui.connector.Response;

/**
 *
 * @author marat
 */
public class MainJFrame extends javax.swing.JFrame {

    RedisFactory rc = null;
    
    public MainJFrame() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            ex.printStackTrace(System.err);
        }
        initComponents();
        setCenterPosition(this);
    }

    private static void setCenterPosition(JFrame frame) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = frame.getPreferredSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        frame.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        PortjTextField = new javax.swing.JTextField();
        HostjTextField = new javax.swing.JTextField();
        ConnectjButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        GetKeysjButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        PatternjTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        KeysjTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        KValuejTextArea = new javax.swing.JTextArea();
        KDeletejButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RedisUI beta");

        jTabbedPane.setEnabled(false);

        jLabel1.setText("Server ip:");

        jLabel2.setText("Server port:");

        jLabel3.setText("Password:");

        PortjTextField.setText("6379");

        HostjTextField.setText("127.0.0.1");
        HostjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HostjTextFieldActionPerformed(evt);
            }
        });

        ConnectjButton.setText("Connect");
        ConnectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PortjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                            .addComponent(HostjTextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConnectjButton)
                            .addComponent(PasswordField))))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(HostjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PortjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConnectjButton)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Connect", jPanel1);

        GetKeysjButton.setText("Get keys");
        GetKeysjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetKeysjButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Pattern:");

        PatternjTextField.setText("*");

        KeysjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        KeysjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KeysjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(KeysjTable);

        KValuejTextArea.setColumns(20);
        KValuejTextArea.setRows(5);
        jScrollPane2.setViewportView(KValuejTextArea);

        KDeletejButton.setText("Delete celected key(s)");
        KDeletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KDeletejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PatternjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GetKeysjButton))
                    .addComponent(KDeletejButton))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatternjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GetKeysjButton)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(KDeletejButton)
                .addContainerGap())
        );

        jTabbedPane.addTab("Key management", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectjButtonActionPerformed
        // connect to DB
        try {
            rc = new RedisFactory();
            rc.connect(HostjTextField.getText(), PortjTextField.getText(), new String(PasswordField.getPassword()));
            jTabbedPane.setEnabled(true);
            jTabbedPane.setSelectedIndex(1);
        } catch (Exception e) {
            e.printStackTrace(System.err);
            JOptionPane.showMessageDialog(this, e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ConnectjButtonActionPerformed

    private void HostjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HostjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HostjTextFieldActionPerformed

    private void getKeys() {
        String pattern = PatternjTextField.getText();
        String[] command = {pattern};
        String[] rez = null;
        try {
            rez = rc.exec(RedisFactory.COMMAND_KEYS, command).getArrayOut();
            DefaultTableModel tm = (DefaultTableModel) KeysjTable.getModel();
            tm.setRowCount(0);
            for (int i=0;i<rez.length;i++) {
                Object[] r = {false, rez[i]};
                tm.addRow(r);
            }
            KeysjTable.setModel(tm);
            TableColumnModel cm = KeysjTable.getColumnModel();
            cm.getColumn(0).setMaxWidth(50);
            KeysjTable.setColumnModel(cm);
        } catch (Exception e) {
            e.printStackTrace(System.err);
            JOptionPane.showMessageDialog(this, e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void GetKeysjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetKeysjButtonActionPerformed
        // Get all keys by pattern
        getKeys();
    }//GEN-LAST:event_GetKeysjButtonActionPerformed

    private void KeysjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KeysjTableMouseClicked
        // Select key from table
        int r = KeysjTable.getSelectedRow();
        String key = KeysjTable.getModel().getValueAt(r, 1).toString();
        String[] params = {key};
        try {
            String type = rc.exec(RedisFactory.COMMAND_TYPE, params).getLineOut();
            if (type.equals("string")) {
                Response res = rc.exec(RedisFactory.COMMAND_GET, params);
                KValuejTextArea.setText(res.getStringOut());
            }
            if (type.equals("int")) {
                Response res = rc.exec(RedisFactory.COMMAND_GET, params);
                KValuejTextArea.setText(String.valueOf(res.getIntOut()));
            }
            if (type.equals("hash")) {
                Response res = rc.exec(RedisFactory.COMMAND_HGETALL, params);
                String[] ss = res.getArrayOut();
                StringBuilder sb = new StringBuilder();
                sb.append("[");
                boolean ispair = true;
                for (int i=0;i<ss.length;i++) {
                    sb.append(ss[i]);
                    if(i<ss.length-1) {
                        if (ispair) {
                            sb.append("=");
                            ispair = false;
                        } else {
                            sb.append(",");
                            ispair = true;
                        }
                    }
                }
                sb.append("]");
                KValuejTextArea.setText(sb.toString());
            }
            
        } catch (Exception ex) {
            ex.printStackTrace(System.err);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_KeysjTableMouseClicked

    private void KDeletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KDeletejButtonActionPerformed
        // delete keys
        ArrayList<String> todel = new ArrayList<String>();
        for (int i=0; i<KeysjTable.getRowCount(); i++) {
            boolean b = Boolean.parseBoolean(KeysjTable.getModel().getValueAt(i, 0).toString());
            if(b) todel.add(KeysjTable.getModel().getValueAt(i, 1).toString());
        }
        if (todel.size()>0) {
            String[] ss = new String[todel.size()];
            for(int i=0;i<todel.size();i++){
                ss[i] = todel.get(i);
            }
            try {
                rc.exec(RedisFactory.COMMAND_DEL, ss);
            } catch (Exception ex) {
                ex.printStackTrace(System.err);
                JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
            }
            getKeys();
        }
    }//GEN-LAST:event_KDeletejButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConnectjButton;
    private javax.swing.JButton GetKeysjButton;
    private javax.swing.JTextField HostjTextField;
    private javax.swing.JButton KDeletejButton;
    private javax.swing.JTextArea KValuejTextArea;
    private javax.swing.JTable KeysjTable;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JTextField PatternjTextField;
    private javax.swing.JTextField PortjTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane;
    // End of variables declaration//GEN-END:variables

    public class KeysTableListener implements TableModelListener, ListSelectionListener {

        @Override
        public void tableChanged(TableModelEvent tme) {
            
            System.err.println(tme.getFirstRow());
        }

        @Override
        public void valueChanged(ListSelectionEvent lse) {
            System.err.println(lse.toString());
        }

    }

}
